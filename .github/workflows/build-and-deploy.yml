name: Build and Deploy with vCluster

on:
  pull_request:
    types: [labeled]
    

jobs:
  build-and-deploy:
    if: ${{ github.event.label.name == 'test' }}
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the PR Code
      - name: Checkout PR Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.PAT_TOKEN }}
      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Step 3: Initialize Go Module
      - name: Initialize Go Module
        working-directory: app
        run: |
          go mod init github.com/loftlabs-experiments/workshop-ephemeral-pr || echo "Module already initialized"
          go mod tidy

      # Step 4: Set up ko
      - name: Set up ko
        uses: ko-build/setup-ko@v0.6
        with:
          version: v0.14.1

      # Step 5: Log into GHCR
      - name: Log into GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | ko login ghcr.io --username ${{ github.actor }} --password-stdin

      # Step 6: Build and Push Image with ko
      - name: Build and Push Image with ko
        working-directory: app
        env:
          KO_DOCKER_REPO: ghcr.io/loftlabs-experiments/workshop-ephemeral-pr
          KO_DEFAULT_PLATFORM: linux/amd64
        run: |
          export IMAGE_TAG=sha-$(git rev-parse --short HEAD)
          FULL_IMAGE=$(ko build . -t $IMAGE_TAG -t latest)
          echo "Full image name: $FULL_IMAGE"
          echo "image_deploy_tag=$FULL_IMAGE" >> $GITHUB_ENV
     
      # Step 7: Generate Deployment Manifest
      - name: Generate Deployment Manifest
        uses: cuchi/jinja2-action@v1.1.0
        with:
          template: tmpl/deploy.j2
          output_file: deploy/deployment.yaml
          strict: true
          variables: |
            image_deploy_tag=${{ env.image_deploy_tag }}
            ingress_tag=pr${{ github.event.pull_request.number }}.vcluster.tech
      # Step 8: Push to a Feature Branch
      - name: Push Deployment Manifest
        run: |
          git config --global user.email "your-email@example.com"
          git config --global user.name "Your Name"
          git checkout -b feature-test-${{ github.event.pull_request.head.sha }}
          git add deploy/deployment.yaml
          git commit -m "Adding deployment.yaml for PR-${{ github.event.pull_request.number }}" || echo "No changes to commit"
          git push origin feature-test-${{ github.event.pull_request.head.sha }} --force
          
      - name: Install vCluster CLI
        uses: loft-sh/setup-vcluster@main
        with:
          url: ${{ secrets.VCLUSTER_PLATFORM_URL }}
          access-key: ${{ secrets.VCLUSTER_ACCESS_KEY }}

      # Step 10: Create vCluster
      - name: Create A vCluster
        uses: loft-sh/create-vcluster@main
        with:
          name: pr-${{ github.event.pull_request.number }}
          project: default
          template: my-template
          parameters: |
            ingress_link: "http://pr${{ github.event.pull_request.number }}.vcluster.tech"

      # Step 11: Deploy to vCluster
      - name: Deploy Application to vCluster
        run: |
          kubectl apply -Rf deploy/

      # Step 12: Test Application with curl
      - name: Test Application
        run: |
          sleep 10
          curl --retry 5 --retry-delay 10 http://pr${{ github.event.pull_request.number }}.vcluster.tech
