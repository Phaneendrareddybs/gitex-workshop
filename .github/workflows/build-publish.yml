name: Build and Push to GHCR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # Initialize Go module
      - name: Initialize Go Module
        working-directory: app
        run: |
          go mod tidy

      # Set up ko
      - name: Set up ko
        uses: ko-build/setup-ko@v0.7
        with:
          version: v0.15.2

      # Log into GHCR
      - name: Log into GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | ko login ghcr.io --username ${{ github.actor }} --password-stdin

      # Build and push image with ko
      - name: Build and Push Image
        working-directory: app
        env:
          KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
          KO_DEFAULT_PLATFORM: linux/amd64,linux/arm64
        run: |
          export IMAGE_TAG=sha-$(git rev-parse --short HEAD)
          FULL_IMAGE=$(ko build . -t $IMAGE_TAG -t latest --platform=$KO_DEFAULT_PLATFORM)
          echo "image_deploy_tag=$FULL_IMAGE" >> $GITHUB_ENV

      # Generate deployment manifest
      - name: Generate Deployment Manifest
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: tmpl/app.j2
          output_file: deploy/app.yaml
          strict: true
          variables: |
            image_deploy_tag=${{ env.image_deploy_tag }}

      # Commit and push manifest
      - name: Commit and Push Manifest
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add deploy/app.yaml
          git commit -m "Update deployment manifest for ${{ env.image_deploy_tag }}" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}